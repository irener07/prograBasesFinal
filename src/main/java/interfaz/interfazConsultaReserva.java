/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;


import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author win8
 */
public class interfazConsultaReserva extends javax.swing.JFrame {
    static ResultSet res;
    public String placaBusqueda;
    public String cedulaBusqueda;
    /**
     * Creates new form interfazConsultaReserva
     */
    public interfazConsultaReserva() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        entradaIdFiltro = new javax.swing.JTextField();
        entradaOperadorFiltro = new javax.swing.JTextField();
        entradaSedeFiltro = new javax.swing.JTextField();
        entradaPlacaFiltro = new javax.swing.JTextField();
        entradaFechaFiltro = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaV = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaC = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ingrese el ID de la Reserva:");

        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Consulta Reserva");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Operador:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Sede de Recogida:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Placa de Vehículo:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Fecha de Inicio:");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idReserva", "Fecha de Solicitud", "Fecha de Inicio", "Fecha Final", "Sede de Entrega", "Sede de Entrega", "Cedula del Cliente", "Placa del Vehículo", "idOperador", "idRecorrido"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        entradaPlacaFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entradaPlacaFiltroActionPerformed(evt);
            }
        });

        entradaFechaFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entradaFechaFiltroActionPerformed(evt);
            }
        });

        tablaV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "placaVehiculo", "numeroVIN", "Costo ", "Año", "Capacidad", "Puertas", "Maletas", "MPG", "Kilometraje", "Transmision", "Color", "Marca", "Estado", "Estilo", "Sede"
            }
        ));
        jScrollPane2.setViewportView(tablaV);

        tablaC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cedula", "Primer Nombre", "Primer Apellido", "Segundo Apellido", "Correo", "Telefono", "idProvincia", "idCanton", "idDistrito", "Señas"
            }
        ));
        jScrollPane3.setViewportView(tablaC);

        jLabel6.setText("Datos de Reserva");

        jLabel7.setText("Datos de Vehículo");

        jLabel8.setText("Datos del Cliente");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(139, 139, 139)
                                                .addComponent(jLabel16))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(entradaFechaFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                                                    .addComponent(entradaPlacaFiltro)
                                                    .addComponent(entradaSedeFiltro)
                                                    .addComponent(entradaOperadorFiltro)
                                                    .addComponent(entradaIdFiltro)))))
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(305, 305, 305)
                                .addComponent(jButton3))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(418, 418, 418)
                                .addComponent(jLabel6))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(420, 420, 420)
                                .addComponent(jLabel7))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(418, 418, 418)
                                .addComponent(jLabel8)))
                        .addGap(0, 430, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(entradaIdFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(entradaOperadorFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(entradaSedeFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(entradaPlacaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(entradaFechaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(16, 16, 16)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo2 = (DefaultTableModel) jTable2.getModel();
        modelo2.setRowCount(0);
        
        DefaultTableModel modelo3 = (DefaultTableModel) tablaV.getModel();
        modelo3.setRowCount(0);
        
        DefaultTableModel modelo4 = (DefaultTableModel) tablaC.getModel();
        modelo4.setRowCount(0);

        if (entradaIdFiltro.getText().equals("") && entradaOperadorFiltro.getText().equals("")  && entradaSedeFiltro.getText().equals("")  && entradaPlacaFiltro.getText().equals("")  && entradaFechaFiltro.getText().equals("") ) {
            JOptionPane.showMessageDialog(null, "Error al realizar la busqueda, ingrese los filtros deseados", "Error de ingreso", JOptionPane.PLAIN_MESSAGE);
        } 
        else {
            //Filtro solo por el ID de la Reserva
            if (!"".equals(entradaIdFiltro.getText()) && entradaOperadorFiltro.getText().equals("")  && entradaSedeFiltro.getText().equals("") && entradaPlacaFiltro.getText().equals("") && entradaFechaFiltro.getText().equals("") ) {
                res = Conexiones.Conexion.consulta("Select * from esquema.Reserva where idReserva='" + entradaIdFiltro.getText() + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();
                        
                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        cedulaBusqueda = res.getString(7);
                        v.add(cedulaBusqueda);
                        placaBusqueda = res.getString(8);
                        v.add(placaBusqueda);
                        v.add(res.getString(9));
                        v.add(res.getString(10));
                        modelo2.addRow(v);
                        jTable2.setModel(modelo2);
                    }
                } catch (SQLException e) {

                }
                res = Conexiones.Conexion.consulta("Select * from esquema.Vehiculo where placa='" + placaBusqueda + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();
                        
                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        v.add(res.getString(7));
                        v.add(res.getString(8));
                        v.add(res.getString(9));
                        v.add(res.getString(11));
                        v.add(res.getString(12));
                        v.add(res.getString(13));
                        v.add(res.getString(14));
                        v.add(res.getString(15));
                        v.add(res.getString(16));
                        modelo3.addRow(v);
                        tablaV.setModel(modelo3);
                    }
                } catch (SQLException e) {

                }
                res = Conexiones.Conexion.consulta("Select * from esquema.Cliente where cedula='" + cedulaBusqueda + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();
                        
                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        v.add(res.getString(7));
                        v.add(res.getString(8));
                        v.add(res.getString(9));
                        v.add(res.getString(10));
                        modelo4.addRow(v);
                        tablaC.setModel(modelo4);
                    }
                } catch (SQLException e) {

                }

            }
            //Filtro solo por el Operador de la reserva
            if (!"".equals(entradaOperadorFiltro.getText()) && entradaIdFiltro.getText().equals("")  && entradaSedeFiltro.getText().equals("")  && entradaPlacaFiltro.getText().equals("") && entradaFechaFiltro.getText().equals("")) {
                res = Conexiones.Conexion.consulta("Select * from esquema.Reserva where idOperador='" + entradaOperadorFiltro.getText() + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();

                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        cedulaBusqueda = res.getString(7);
                        v.add(cedulaBusqueda);
                        placaBusqueda = res.getString(8);
                        v.add(placaBusqueda);
                        v.add(res.getString(9));
                        v.add(res.getString(10));
                        modelo2.addRow(v);
                        jTable2.setModel(modelo2);
                    }
                } catch (SQLException e) {

                }
                res = Conexiones.Conexion.consulta("Select * from esquema.Vehiculo where placa='" + placaBusqueda + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();
                        
                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        v.add(res.getString(7));
                        v.add(res.getString(8));
                        v.add(res.getString(9));
                        v.add(res.getString(11));
                        v.add(res.getString(12));
                        v.add(res.getString(13));
                        v.add(res.getString(14));
                        v.add(res.getString(15));
                        v.add(res.getString(16));
                        modelo3.addRow(v);
                        tablaV.setModel(modelo3);
                    }
                } catch (SQLException e) {

                }
                res = Conexiones.Conexion.consulta("Select * from esquema.Cliente where cedula='" + cedulaBusqueda + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();
                        
                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        v.add(res.getString(7));
                        v.add(res.getString(8));
                        v.add(res.getString(9));
                        v.add(res.getString(10));
                        modelo4.addRow(v);
                        tablaC.setModel(modelo4);
                    }
                } catch (SQLException e) {

                }

            }
            //Filtro solo por la sede de recogido
            if (!"".equals(entradaSedeFiltro.getText()) && entradaIdFiltro.getText().equals("")  && entradaOperadorFiltro.getText().equals("") && entradaPlacaFiltro.getText().equals("")  && entradaFechaFiltro.getText().equals("") ) {
                res = Conexiones.Conexion.consulta("Select * from esquema.Reserva where sedeRecogido='" + entradaSedeFiltro.getText() + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();

                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        cedulaBusqueda = res.getString(7);
                        v.add(cedulaBusqueda);
                        placaBusqueda = res.getString(8);
                        v.add(placaBusqueda);
                        v.add(res.getString(9));
                        v.add(res.getString(10));
                        modelo2.addRow(v);
                        jTable2.setModel(modelo2);
                    }
                } catch (SQLException e) {

                }
                res = Conexiones.Conexion.consulta("Select * from esquema.Vehiculo where placa='" + placaBusqueda + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();
                        
                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        v.add(res.getString(7));
                        v.add(res.getString(8));
                        v.add(res.getString(9));
                        v.add(res.getString(11));
                        v.add(res.getString(12));
                        v.add(res.getString(13));
                        v.add(res.getString(14));
                        v.add(res.getString(15));
                        v.add(res.getString(16));
                        modelo3.addRow(v);
                        tablaV.setModel(modelo3);
                    }
                } catch (SQLException e) {

                }
                res = Conexiones.Conexion.consulta("Select * from esquema.Cliente where cedula='" + cedulaBusqueda + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();
                        
                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        v.add(res.getString(7));
                        v.add(res.getString(8));
                        v.add(res.getString(9));
                        v.add(res.getString(10));
                        modelo4.addRow(v);
                        tablaC.setModel(modelo4);
                    }
                } catch (SQLException e) {

                }

            }
            //Filtro solo por la placa del vehículo
            if (!"".equals(entradaPlacaFiltro.getText()) && entradaOperadorFiltro.getText().equals("")  && entradaSedeFiltro.getText().equals("")  && entradaIdFiltro.getText().equals("")  && entradaFechaFiltro.getText().equals("") ) {
                res = Conexiones.Conexion.consulta("Select * from esquema.Reserva where placaVehiculo='" + entradaPlacaFiltro.getText() + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();

                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        cedulaBusqueda = res.getString(7);
                        v.add(cedulaBusqueda);
                        placaBusqueda = res.getString(8);
                        v.add(placaBusqueda);
                        v.add(res.getString(9));
                        v.add(res.getString(10));
                        modelo2.addRow(v);
                        jTable2.setModel(modelo2);
                    }
                } catch (SQLException e) {

                }
                res = Conexiones.Conexion.consulta("Select * from esquema.Vehiculo where placa='" + placaBusqueda + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();
                        
                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        v.add(res.getString(7));
                        v.add(res.getString(8));
                        v.add(res.getString(9));
                        v.add(res.getString(11));
                        v.add(res.getString(12));
                        v.add(res.getString(13));
                        v.add(res.getString(14));
                        v.add(res.getString(15));
                        v.add(res.getString(16));
                        modelo3.addRow(v);
                        tablaV.setModel(modelo3);
                    }
                } catch (SQLException e) {

                }
                res = Conexiones.Conexion.consulta("Select * from esquema.Cliente where cedula='" + cedulaBusqueda + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();
                        
                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        v.add(res.getString(7));
                        v.add(res.getString(8));
                        v.add(res.getString(9));
                        v.add(res.getString(10));
                        modelo4.addRow(v);
                        tablaC.setModel(modelo4);
                    }
                } catch (SQLException e) {

                }

            }
            //Filtro de fecha de Inicio
            if (!"".equals(entradaFechaFiltro.getText()) && entradaOperadorFiltro.getText().equals("")&& entradaSedeFiltro.getText().equals("") && entradaPlacaFiltro.getText().equals("") && entradaIdFiltro.getText().equals("")) {
                res = Conexiones.Conexion.consulta("Select * from esquema.Reserva where fechaInicio='" + entradaIdFiltro.getText() + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();

                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        cedulaBusqueda = res.getString(7);
                        v.add(cedulaBusqueda);
                        placaBusqueda = res.getString(8);
                        v.add(placaBusqueda);
                        v.add(res.getString(9));
                        v.add(res.getString(10));
                        modelo2.addRow(v);
                        jTable2.setModel(modelo2);
                    }
                } catch (SQLException e) {

                }
                res = Conexiones.Conexion.consulta("Select * from esquema.Vehiculo where placa='" + placaBusqueda + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();
                        
                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        v.add(res.getString(7));
                        v.add(res.getString(8));
                        v.add(res.getString(9));
                        v.add(res.getString(11));
                        v.add(res.getString(12));
                        v.add(res.getString(13));
                        v.add(res.getString(14));
                        v.add(res.getString(15));
                        v.add(res.getString(16));
                        modelo3.addRow(v);
                        tablaV.setModel(modelo3);
                    }
                } catch (SQLException e) {

                }
                res = Conexiones.Conexion.consulta("Select * from esquema.Cliente where cedula='" + cedulaBusqueda + "'");
                try {
                    while (res.next()) {
                        Vector v = new Vector();
                        
                        v.add(res.getString(1));
                        v.add(res.getString(2));
                        v.add(res.getString(3));
                        v.add(res.getString(4));
                        v.add(res.getString(5));
                        v.add(res.getString(6));
                        v.add(res.getString(7));
                        v.add(res.getString(8));
                        v.add(res.getString(9));
                        v.add(res.getString(10));
                        modelo4.addRow(v);
                        tablaC.setModel(modelo4);
                    }
                } catch (SQLException e) {

                }

            }
            
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void entradaPlacaFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entradaPlacaFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entradaPlacaFiltroActionPerformed

    private void entradaFechaFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entradaFechaFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entradaFechaFiltroActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfazConsultaReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfazConsultaReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfazConsultaReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfazConsultaReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfazConsultaReserva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField entradaFechaFiltro;
    private javax.swing.JTextField entradaIdFiltro;
    private javax.swing.JTextField entradaOperadorFiltro;
    private javax.swing.JTextField entradaPlacaFiltro;
    private javax.swing.JTextField entradaSedeFiltro;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable tablaC;
    private javax.swing.JTable tablaV;
    // End of variables declaration//GEN-END:variables
}
